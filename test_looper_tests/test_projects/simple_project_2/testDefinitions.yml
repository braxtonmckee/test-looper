looper_version: 2
repos:
  simple: simple_project/8ee69e550635478aa07935bad890f2158bbd4302
environments:
  linux:
    base: simple/linux
    variables:
      ENV_VAR: LINUX_OVERRIDE
  linux_dependent:
    base: linux
    variables:
      ENV_VAR: LINUX_OVERRIDE_SECOND
      ENV_VAR_2: LINUX_OVERRIDE_2
    dependencies:
      simplesource: simple
  linux2:
    platform: linux
    image:
      dockerfile: "Dockerfile.txt"
    dependencies:
      simplesource: simple
  windows:
    platform: windows
    image:
      base_ami: "ami-123"
builds:
  build2/linux:
    command: "cp $TEST_INPUTS/build_import/* $TEST_BUILD_OUTPUT_DIR"
    dependencies:
      build_import: simple/build/linux
  winbuild/windows:
    command: "echo 'hi'"
tests:
  test2/linux:
    command: "cat $TEST_INPUTS/simplesource/starts_a_long_docker.py"
    dependencies:
      build_import: simple/build/linux
      simplesource: simple
  test2/linux_dependent:
    command: "cat $TEST_INPUTS/simplesource/starts_a_long_docker.py"
    dependencies:
      build_import: simple/build/linux
  test3/linux_dependent:
    command: |
      if [ "$ENV_VAR" != "LINUX_OVERRIDE_SECOND" ]; then exit 1; fi
      if [ "$ENV_VAR_2" != "LINUX_OVERRIDE_2" ]; then exit 1; fi
    dependencies:
      build_import: simple/build/linux
  test2_fails/linux:
    command: "cat $TEST_INPUTS/simplesource/doesntExist.py"
    dependencies:
      build_import: simple/build/linux
      simplesource: simple
  test2_dep_from_env/linux2:
    command: "cat $TEST_INPUTS/simplesource/starts_a_long_docker.py"
    dependencies:
      build_import: simple/build/linux
  sleeper/linux:
    command: "./sleeper.py"
  test3_dep_on_cached_source/linux:
    command: |
      if [ -f $TEST_INPUTS/simplesource/starts_a_long_docker.py ]
      then 
        exit 0
      else
        exit 1
      fi
    dependencies:
      simplesource: simple
  test_with_individual_failures/linux:
    command: |
      echo '{"Test1": true, "Test2": false}' > $TEST_OUTPUT_DIR/testSummary.json
